import { b, c, d } from './chunk-VO7VPLVP.js';
import { useEffectAsync, useMemoAsync } from '@chengsokdara/react-hooks-async';
import { useRef, useState, useEffect } from 'react';

var ae={apiKey:"",autoStart:!1,autoTranscribe:!0,mode:"transcriptions",nonStop:!1,removeSilence:!1,stopTimeout:5e3,streaming:!1,timeSlice:1e3,onDataAvailable:void 0,onTranscribe:void 0},ie={stop:void 0},se={blob:void 0,text:void 0},fe=M=>{let{apiKey:b$1,autoStart:A,autoTranscribe:x,mode:S,nonStop:U,removeSilence:q,stopTimeout:K,streaming:T,timeSlice:I,whisperConfig:u,onDataAvailable:$,onTranscribe:d$1}={...ae,...M};if(!b$1&&!d$1)throw new Error("apiKey is required if onTranscribe is not provided");let l=useRef([]),i=useRef(),s=useRef(),t=useRef(),a=useRef(),m=useRef(ie),[j,k]=useState(!1),[z,B]=useState(!1),[C,W]=useState(!1),[N,w]=useState(!1),[G,p]=useState(se);useEffect(()=>()=>{l.current&&(l.current=[]),i.current&&(i.current.flush(),i.current=void 0),t.current&&(t.current.destroy(),t.current=void 0),y("stop"),s.current&&(s.current.off("speaking",R),s.current.off("stopped_speaking",v)),a.current&&(a.current.getTracks().forEach(e=>e.stop()),a.current=void 0);},[]),useEffectAsync(async()=>{A&&await E();},[A]);let J=async()=>{await E();},Q=async()=>{await Y();},V=async()=>{await H();},E=async()=>{try{if(a.current||await X(),a.current){if(!t.current){let{default:{RecordRTCPromisesHandler:r,StereoAudioRecorder:o}}=await import('recordrtc'),n={mimeType:"audio/wav",numberOfAudioChannels:1,recorderType:o,sampleRate:44100,timeSlice:T?I:void 0,type:"audio",ondataavailable:x&&T?re:void 0};t.current=new r(a.current,n);}if(!i.current){let{Mp3Encoder:r}=await import('lamejs');i.current=new r(1,44100,96);}let e=await t.current.getState();(e==="inactive"||e==="stopped")&&await t.current.startRecording(),e==="paused"&&await t.current.resumeRecording(),U&&F("stop"),k(!0);}}catch{}},X=async()=>{try{if(a.current&&a.current.getTracks().forEach(e=>e.stop()),a.current=await navigator.mediaDevices.getUserMedia({audio:!0}),!s.current){let{default:e}=await import('hark');s.current=e(a.current,{interval:100,play:!1}),s.current.on("speaking",R),s.current.on("stopped_speaking",v);}}catch{}},F=e=>{m.current[e]||(m.current[e]=setTimeout(H,K));},R=()=>{B(!0),W(!0),y("stop");},v=()=>{B(!1),U&&C&&F("stop");},Y=async()=>{try{t.current&&(await t.current.getState()==="recording"&&await t.current.pauseRecording(),y("stop"),k(!1),W(!1));}catch{}},H=async()=>{try{if(t.current){let e=await t.current.getState();if((e==="recording"||e==="paused")&&await t.current.stopRecording(),Z(),y("stop"),k(!1),x)await ee();else {let r=await t.current.getBlob();p({blob:r});}await t.current.destroy(),l.current=[],i.current&&(i.current.flush(),i.current=void 0),t.current=void 0;}}catch{}},Z=()=>{s.current&&(s.current.off("speaking",R),s.current.off("stopped_speaking",v),s.current=void 0),a.current&&(a.current.getTracks().forEach(e=>e.stop()),a.current=void 0);},y=e=>{m.current[e]&&(clearTimeout(m.current[e]),m.current[e]=void 0);},ee=async()=>{try{if(i.current&&t.current&&await t.current.getState()==="stopped"){w(!0);let r=await t.current.getBlob();if(q){let{createFFmpeg:o}=await import('@ffmpeg/ffmpeg'),n=o({mainName:"main",corePath:b,log:!0});n.isLoaded()||await n.load();let c$1=await r.arrayBuffer();n.FS("writeFile","in.wav",new Uint8Array(c$1)),await n.run("-i","in.wav","-acodec","libmp3lame","-b:a","96k","-ar","44100","-af",c,"out.mp3");let h=n.FS("readFile","out.mp3");if(h.length<=225){n.exit(),p({blob:r}),w(!1);return}r=new Blob([h.buffer],{type:"audio/mpeg"}),n.exit();}else {let o=await r.arrayBuffer(),n=i.current.encodeBuffer(new Int16Array(o));r=new Blob([n],{type:"audio/mpeg"});}if(typeof d$1=="function"){let o=await d$1(r);p(o);}else {let o=new File([r],"speech.mp3",{type:"audio/mpeg"}),n=await D(o);p({blob:r,text:n});}w(!1);}}catch{w(!1);}},re=async e=>{try{if(T&&t.current){if($?.(e),i.current){let o=await e.arrayBuffer(),n=i.current.encodeBuffer(new Int16Array(o)),c=new Blob([n],{type:"audio/mpeg"});l.current.push(c);}if(await t.current.getState()==="recording"){let o=new Blob(l.current,{type:"audio/mpeg"});if(typeof d$1=="function"){let n=await d$1(o);n.text&&p(c=>({...c,text:n.text}));}else {let n=new File([o],"speech.mp3",{type:"audio/mpeg"}),c=await D(n);c&&p(h=>({...h,text:c}));}}}}catch{}},D=useMemoAsync(async e=>{let r=new FormData;r.append("file",e),r.append("model","whisper-1"),S==="transcriptions"&&r.append("language",u?.language??"en"),u?.prompt&&r.append("prompt",u.prompt),u?.response_format&&r.append("response_format",u.response_format),u?.temperature&&r.append("temperature",`${u.temperature}`);let o={};o["Content-Type"]="multipart/form-data",b$1&&(o.Authorization=`Bearer ${b$1}`);let{default:n}=await import('axios');return (await n.post(d+S,r,{headers:o})).data.text},[b$1,S,u]);return {recording:j,speaking:z,spokeAtLeastOnce:C,transcribing:N,transcript:G,pauseRecording:Q,startRecording:J,stopRecording:V}};

export { fe as a };
