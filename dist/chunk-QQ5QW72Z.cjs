'use strict';

var chunk57AVKP4H_cjs = require('./chunk-57AVKP4H.cjs');
var reactHooksAsync = require('@chengsokdara/react-hooks-async');
var react = require('react');

var ne={apiKey:"",autoStart:!1,autoTranscribe:!0,mode:"transcriptions",nonStop:!1,removeSilence:!1,stopTimeout:5e3,streaming:!1,timeSlice:1e3,onDataAvailable:void 0,onTranscribe:void 0},oe={stop:void 0},ae={blob:void 0,text:void 0},ue=P=>{let{apiKey:g,autoStart:x,autoTranscribe:A,mode:S,nonStop:U,removeSilence:M,stopTimeout:q,streaming:T,timeSlice:K,whisperConfig:u,onDataAvailable:O,onTranscribe:d}={...ne,...P};if(!g&&!d)throw new Error("apiKey is required if onTranscribe is not provided");let l=react.useRef([]),i=react.useRef(),s=react.useRef(),t=react.useRef(),a=react.useRef(),m=react.useRef(oe),[I,k]=react.useState(!1),[$,B]=react.useState(!1),[j,b]=react.useState(!1),[z,p]=react.useState(ae);react.useEffect(()=>()=>{l.current&&(l.current=[]),i.current&&(i.current.flush(),i.current=void 0),t.current&&(t.current.destroy(),t.current=void 0),w("stop"),s.current&&(s.current.off("speaking",R),s.current.off("stopped_speaking",v)),a.current&&(a.current.getTracks().forEach(e=>e.stop()),a.current=void 0);},[]),reactHooksAsync.useEffectAsync(async()=>{x&&await C();},[x]);let N=async()=>{await C();},G=async()=>{await V();},J=async()=>{await E();},C=async()=>{try{if(a.current||await Q(),a.current){if(!t.current){let{default:{RecordRTCPromisesHandler:r,StereoAudioRecorder:o}}=await import('recordrtc'),n={mimeType:"audio/wav",numberOfAudioChannels:1,recorderType:o,sampleRate:44100,timeSlice:T?K:void 0,type:"audio",ondataavailable:A&&T?Z:void 0};t.current=new r(a.current,n);}if(!i.current){let{Mp3Encoder:r}=await import('lamejs');i.current=new r(1,44100,96);}let e=await t.current.getState();(e==="inactive"||e==="stopped")&&await t.current.startRecording(),e==="paused"&&await t.current.resumeRecording(),U&&W("stop"),k(!0);}}catch{}},Q=async()=>{try{if(a.current&&a.current.getTracks().forEach(e=>e.stop()),a.current=await navigator.mediaDevices.getUserMedia({audio:!0}),!s.current){let{default:e}=await import('hark');s.current=e(a.current,{interval:100,play:!1}),s.current.on("speaking",R),s.current.on("stopped_speaking",v);}}catch{}},W=e=>{m.current[e]||(m.current[e]=setTimeout(E,q));},R=()=>{B(!0),w("stop");},v=()=>{B(!1),U&&W("stop");},V=async()=>{try{t.current&&(await t.current.getState()==="recording"&&await t.current.pauseRecording(),w("stop"),k(!1));}catch{}},E=async()=>{try{if(t.current){let e=await t.current.getState();if((e==="recording"||e==="paused")&&await t.current.stopRecording(),X(),w("stop"),k(!1),A)await Y();else {let r=await t.current.getBlob();p({blob:r});}await t.current.destroy(),l.current=[],i.current&&(i.current.flush(),i.current=void 0),t.current=void 0;}}catch{}},X=()=>{s.current&&(s.current.off("speaking",R),s.current.off("stopped_speaking",v),s.current=void 0),a.current&&(a.current.getTracks().forEach(e=>e.stop()),a.current=void 0);},w=e=>{m.current[e]&&(clearTimeout(m.current[e]),m.current[e]=void 0);},Y=async()=>{try{if(i.current&&t.current&&await t.current.getState()==="stopped"){b(!0);let r=await t.current.getBlob();if(M){let{createFFmpeg:o}=await import('@ffmpeg/ffmpeg'),n=o({mainName:"main",corePath:chunk57AVKP4H_cjs.b,log:!0});n.isLoaded()||await n.load();let c=await r.arrayBuffer();n.FS("writeFile","in.wav",new Uint8Array(c)),await n.run("-i","in.wav","-acodec","libmp3lame","-b:a","96k","-ar","44100","-af",chunk57AVKP4H_cjs.c,"out.mp3");let y=n.FS("readFile","out.mp3");if(y.length<=225){n.exit(),p({blob:r}),b(!1);return}r=new Blob([y.buffer],{type:"audio/mpeg"}),n.exit();}else {let o=await r.arrayBuffer(),n=i.current.encodeBuffer(new Int16Array(o));r=new Blob([n],{type:"audio/mpeg"});}if(typeof d=="function"){let o=await d(r);p(o);}else {let o=new File([r],"speech.mp3",{type:"audio/mpeg"}),n=await F(o);p({blob:r,text:n});}b(!1);}}catch{b(!1);}},Z=async e=>{try{if(T&&t.current){if(O?.(e),i.current){let o=await e.arrayBuffer(),n=i.current.encodeBuffer(new Int16Array(o)),c=new Blob([n],{type:"audio/mpeg"});l.current.push(c);}if(await t.current.getState()==="recording"){let o=new Blob(l.current,{type:"audio/mpeg"});if(typeof d=="function"){let n=await d(o);n.text&&p(c=>({...c,text:n.text}));}else {let n=new File([o],"speech.mp3",{type:"audio/mpeg"}),c=await F(n);c&&p(y=>({...y,text:c}));}}}}catch{}},F=reactHooksAsync.useMemoAsync(async e=>{let r=new FormData;r.append("file",e),r.append("model","whisper-1"),S==="transcriptions"&&r.append("language",u?.language??"en"),u?.prompt&&r.append("prompt",u.prompt),u?.response_format&&r.append("response_format",u.response_format),u?.temperature&&r.append("temperature",`${u.temperature}`);let o={};o["Content-Type"]="multipart/form-data",g&&(o.Authorization=`Bearer ${g}`);let{default:n}=await import('axios');return (await n.post(chunk57AVKP4H_cjs.d+S,r,{headers:o})).data.text},[g,S,u]);return {recording:I,speaking:$,transcribing:j,transcript:z,pauseRecording:G,startRecording:N,stopRecording:J}};

exports.a = ue;
